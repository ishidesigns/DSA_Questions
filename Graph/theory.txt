Graph 

- It is a non linear data structure.
- it consists of nodes/ vertices and edges.
- Graphs represent networks, relations or connections.

Types of Graphs
- Directed and Undirected
- Weighted and non-Weighted

Directed Graph
- Edges represent a specific path from one vertex to another
DAG(Directed Acyclic Graph) : no cycle is found in graph.

Undirected Graph
- Edges are not associated with directions.

Weighted Graph
- Edges have weights associated with them.

non-Weighted Graph
- Edges don't have any weight associatedwith them.

Graph Representation
- Adjacency Matrix
- Adjacency List

Adjacency Matrix 
- represented by a V*V matrix (V - vertex) containing 0's and 1's.
- 1 represents connected vertices and 0 represents no edge between vertices
Advantages:
- Easy to implement
- Removing edge takes O(1) TC.
- searching an edge takes o(1) TC.
Disadvantages:
- o(V^2) SC.
- adding a vertex takes O(V^2) time.

    A  B  C  D
A   0  1  0  1
B   1  0  1  0
C   0  1  0  1
D   1  0  1  0

Adjacency List 
- Array of linked lists.
- Size of array is equal to the number of vertices.
Advantages:
- O(V+E) TC ; Worst Case TC = O(V^2)
- Adding vertex is easy.
Disadvantages:
- finding an edge takes O(V) TC.

A -> B -> D
B -> A -> C
C -> B -> D
D -> C -> A